<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.zxiaozhou.skillfull.auth.modules.rbac.mapper.RbacRolePermissionMapper">

    <resultMap type="indi.zxiaozhou.skillfull.auth.modules.rbac.entity.RbacRolePermissionEntity"
               id="RbacRolePermissionMap">
        <result property="rolePermissionId" column="role_permission_id" jdbcType="VARCHAR"/>
        <result property="permissionId" column="permission_id" jdbcType="VARCHAR"/>
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
        <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
        <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
        <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
        <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
        <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
        <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--数据库字段-->
    <sql id="Column_List">
        role_permission_id, permission_id, role_id, remark, create_user_id,
        create_user_name, create_time, update_user_id, update_user_name, update_time, del_flag, create_area_code,
        create_position_code, create_org_sys_code, create_system_code, create_tenant_id
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Permission_Ali">
        ali.permission_id, ali.parent_id, ali.path, ali.component, ali.path_name, ali.redirect, ali.permission_type,
        ali.iframe, ali.iframe_type, ali.permission_status, ali.meta_title, ali.ignore_auth, ali.ignore_keep_alive,
        ali.affix, ali.icon, ali.icon_type, ali.frame_src, ali.transition_name,ali.hide_breadcrumb,ali.carry_param,
        ali.hide_children_in_menu,ali.service_id,
        ali.current_active_menu, ali.hide_tab, ali.hide_menu, ali.order_no, ali.ignore_route,
        ali.hide_path_for_children, ali.check_strategy, ali.action_type, ali.action_uri, ali.actions,
        ali.system_id, ali.enable_delete, ali.permission_sys_code, ali.unique_help, ali.remark, ali.create_area_code,
        ali.create_position_code, ali.create_org_sys_code, ali.create_system_code, ali.create_tenant_id,
        ali.create_user_id, ali.create_user_name, ali.create_time, ali.update_user_id, ali.update_user_name,
        ali.update_time, ali.del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.role_permission_id, ali.permission_id, ali.role_id, ali.remark,
        ali.create_user_id, ali.create_user_name, ali.create_time, ali.update_user_id, ali.update_user_name,
        ali.update_time, ali.del_flag, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id
    </sql>

    <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.role_permission_id, ali.permission_id, ali.role_id, ali.remark,
        ali.create_user_id, ali.create_user_name, ali.create_time, ali.update_user_id, ali.update_user_name,
        ali.update_time, ali.del_flag, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Permission">
        arp.permission_id, arp.parent_id, arp.path, arp.component, arp.path_name, arp.redirect, arp.permission_type,
        arp.iframe, arp.iframe_type, arp.permission_status, arp.meta_title, arp.ignore_auth, arp.ignore_keep_alive,
        arp.affix, arp.icon, arp.icon_type, arp.frame_src, arp.transition_name, arp.hide_breadcrumb, arp.carry_param,
        arp.hide_children_in_menu, arp.current_active_menu, arp.hide_tab, arp.hide_menu, arp.order_no, arp.ignore_route,
        arp.hide_path_for_children, arp.check_strategy, arp.action_type, arp.action_uri, arp.actions,
        arp.system_id, arp.service_id, arp.enable_delete, arp.permission_sys_code, arp.unique_help, arp.remark,
        arp.create_area_code, arp.create_position_code, arp.create_org_sys_code, arp.create_system_code,
        arp.create_tenant_id, arp.create_user_id, arp.create_user_name, arp.create_time, arp.update_user_id,
        arp.update_user_name, arp.update_time, arp.del_flag
    </sql>


    <!--通过实体作为筛选条件查询-->
    <select id="selectMenuAntButton"
            resultType="indi.zxiaozhou.skillfull.auth.modules.rbac.service.dto.RbacRolePermissionDto">
        SELECT
        arr.role_code,
        arr.role_sys_code,
        arr.role_name,
        arrp.role_id,
        <include refid="Column_List_Permission"/>
        FROM
        auth_rbac_role_permission arrp
        LEFT JOIN auth_rbac_permission arp ON arrp.permission_id = arp.permission_id
        LEFT JOIN auth_rbac_role arr ON arr.role_id = arrp.role_id
        <where>
            arrp.del_flag = 0
            AND arrp.role_id IN (${roleIds})
            AND arp.del_flag = 0
            AND arp.permission_status = 1
            <if test="type!=null and type==1">
                AND arp.permission_type != 0
            </if>
        </where>
    </select>


    <!-- 获取用户路由信息 -->
    <select id="getUserRouters"
            resultType="indi.zxiaozhou.skillfull.auth.modules.rbac.service.dto.RbacUserRouterDto">
        SELECT
        DISTINCT
        <include refid="Column_List_Permission_Ali"/>
        FROM auth_rbac_correlate_role arcr
        INNER JOIN auth_rbac_role_permission arrp ON arcr.role_id = arrp.role_id
        INNER JOIN auth_rbac_permission ali ON arrp.permission_id = ali.permission_id
        WHERE
        arcr.correlate_id = #{userId, jdbcType=VARCHAR}
        <if test="systemIds != null and systemIds.size() > 0">
            AND ali.system_id IN
            <foreach collection="systemIds" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="type!=null">
            AND ali.permission_type = #{type, jdbcType=INTEGER}
        </if>
        AND ali.del_flag = 0
        AND ali.permission_status = 1
        AND arcr.correlate_type = 3
        AND arcr.del_flag = 0
        AND arrp.del_flag = 0
        ORDER BY
        ali.system_id,
        ali.order_no,
        ali.create_system_code ASC
    </select>


    <!-- 通过权限角色id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM auth_rbac_role_permission
        WHERE role_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE auth_rbac_role_permission
        <set>
            del_flag = 1,
        </set>
        WHERE role_permission_id = #{rolePermissionId, jdbcType=VARCHAR}
    </update>
</mapper>